(()=>{"use strict";class t{static get model(){return"Model"}constructor({id:t=null}={}){this.id=t}static get _tables(){return this.__tables=this.__tables||[]}static register(s){t._tables.push(s)}static get _staticProperties(){return Object.prototype.hasOwnProperty.call(this,"__staticProperties")||(this.__staticProperties={id:0,all:{}}),this.__staticProperties}static get all(){return Object.values(this._staticProperties.all)}static get id(){return this._staticProperties.id++}save(){return this.id=this.constructor.id,this.constructor._staticProperties.all[this.id]=this,localStorage.setItem(this.constructor.model,JSON.stringify(this.constructor.all)),this}static load(){return localStorage.getItem(this.model)?(this._staticProperties.all=JSON.parse(localStorage.getItem(this.model)).map((t=>new this(t))),this._staticProperties.id=this.all.reduce(((t,s)=>!isNaN(s.id)&&t<=s.id?s.id+1:t),0),this.all):this.all}static loadAll(){t._tables.forEach((t=>t.load()))}}const s=t;class i extends s{static get model(){return"Todo"}constructor({id:t,title:s,description:i,priority:e}){super({id:t}),this.title=s,this.description=i,this.priority=e}}s.register(i);const e=i;s.loadAll(),console.log(new e({title:"Title"}).save()),console.log(new e({description:"description"}).save()),console.table(e.all),localStorage.clear()})();
//# sourceMappingURL=main.js.map